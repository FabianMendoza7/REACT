[{"C:\\Me\\React\\citas\\src\\index.js":"1","C:\\Me\\React\\citas\\src\\reportWebVitals.js":"2","C:\\Me\\React\\citas\\src\\App.js":"3","C:\\Me\\React\\citas\\src\\components\\Formulario.js":"4","C:\\Me\\React\\citas\\src\\components\\Cita.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":1740,"mtime":1607173456155,"results":"9","hashOfConfig":"7"},{"size":2888,"mtime":1607173180203,"results":"10","hashOfConfig":"7"},{"size":718,"mtime":1607173326509,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1uvexg5",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Me\\React\\citas\\src\\index.js",[],["24","25"],"C:\\Me\\React\\citas\\src\\reportWebVitals.js",[],"C:\\Me\\React\\citas\\src\\App.js",["26"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport Formulario from \"./components/Formulario\";\nimport Cita from \"./components/Cita\";\n\nconst App = () => {\n\n  // Citas en el localStorage.\n  let citasIniciales = JSON.parse(localStorage.getItem('citas'));\n  if(!citasIniciales){\n    citasIniciales = [];\n  }\n\n  // Arregla de citas.\n  const [citas, guardarCitas] = useState(citasIniciales);\n\n  // Realizar ciertas operaciones cuando el State cambia.\n  useEffect( () => {\n    if(citasIniciales){\n      localStorage.setItem('citas', JSON.stringify(citas));\n    }else{\n      localStorage.setItem('citas', JSON.stringify([]));\n    }\n  }, [citas, citasIniciales]);\n\n  // Toma las citas actuales y agrega la nueva.\n  const crearCita = (cita) => {\n    guardarCitas([\n      ...citas,\n      cita\n    ])\n  };\n\n  // Elimina una cita por su id.\n  const eliminarCita = id => {\n    const nuevasCitas = citas.filter(cita => cita.id !== id);\n    guardarCitas(nuevasCitas);\n  };\n\n  // Mensaje condicional.\n  const titulo = citas.length == 0 ? 'No hay citas' : 'Administra tus Citas';\n\n  return (\n    <Fragment>\n      <h1>Adminsitrador de Pacientes</h1>\n\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"one-half column\">\n            <Formulario\n              crearCita={crearCita}\n            />\n          </div>\n          <div className=\"one-half column\">\n            <h2>{titulo}</h2>\n            {\n              citas.map(cita => (\n                <Cita\n                  key={cita.id}\n                  cita={cita}\n                  eliminarCita={eliminarCita}\n                />\n              ))\n            }\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","C:\\Me\\React\\citas\\src\\components\\Formulario.js",[],"C:\\Me\\React\\citas\\src\\components\\Cita.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":40,"column":31,"nodeType":"33","messageId":"34","endLine":40,"endColumn":33},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]